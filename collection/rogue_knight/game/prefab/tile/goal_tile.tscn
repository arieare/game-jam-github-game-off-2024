[gd_scene load_steps=4 format=3 uid="uid://dhewjymsou8p4"]

[sub_resource type="Shader" id="Shader_x172y"]
code = "shader_type spatial;

uniform vec4 aura_color : source_color = vec4(2.0, 1.0, 0.0, 0.09);
uniform float aura_thickness : hint_range(0.01, 0.1) = 0.01;
uniform bool apply_to_mesh = true;
uniform float pulse_speed : hint_range(0.1, 5.0) = 1.0;
uniform float pulse_strength : hint_range(0.0, 1.0) = 0.2;

void vertex() {
    if (apply_to_mesh) {
        VERTEX = VERTEX + NORMAL * aura_thickness;
    }
}

void fragment() {
    float time = TIME * pulse_speed;
    float pulse_factor = sin(time) * 0.5 + 0.5;

    vec4 dynamic_aura_color = aura_color * (1.0 + pulse_strength * pulse_factor);

    ALBEDO = dynamic_aura_color.rgb;
    ALPHA = dynamic_aura_color.a;

    EMISSION = dynamic_aura_color.rgb * 2.0;
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_w2nmb"]
resource_local_to_scene = true
render_priority = 0
shader = SubResource("Shader_x172y")
shader_parameter/aura_color = Color(1, 0.5, 0, 0)
shader_parameter/aura_thickness = 0.01
shader_parameter/apply_to_mesh = false
shader_parameter/pulse_speed = 5.0
shader_parameter/pulse_strength = 0.1

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_268ar"]
resource_local_to_scene = true
next_pass = SubResource("ShaderMaterial_w2nmb")
diffuse_mode = 3
albedo_color = Color(0.682123, 0.2322, 0.86, 1)
albedo_texture_force_srgb = true
roughness = 0.0
emission_enabled = true
emission = Color(0.283333, 0, 1, 1)
emission_energy_multiplier = 2.0
rim = 0.24
subsurf_scatter_strength = 0.4
subsurf_scatter_skin_mode = true
subsurf_scatter_transmittance_enabled = true
subsurf_scatter_transmittance_depth = 0.001

[node name="goal_tile" type="CSGBox3D" groups=["board", "goal"]]
use_collision = true
size = Vector3(0.5, 0.1, 0.5)
material = SubResource("StandardMaterial3D_268ar")
